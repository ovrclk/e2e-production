name: e2e

on:
  schedule:
    - cron: '*/5 * * * *'

env:
  AKASH_HOME: /home/runner/.akash
  AKASH_NODE: tcp://rpc0.mainnet.akash.network:26657
  AKASH_GAS: auto
  AKASH_GAS_ADJUSTMENT: 1.15
  AKASH_GAS_PRICES: 0.025uakt
  AKASH_SIGN_MODE: amino-json
  AKASH_CHAIN_ID: akashnet-2
  AKASH_FROM: e2e-production-github
  AKASH_KEYRING_BACKEND: test
jobs:
  e2e-production:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: installing toolset
        run: sudo apt install wget curl jq
      - name: install akash binaries
        run: |-
          wget $(curl -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" -s https://api.github.com/repos/ovrclk/akash/releases/latest | jq -r ".assets[] | select(.name | test(\"linux_amd64.deb\")) | .browser_download_url") -O akash.deb
          sudo dpkg -i akash.deb
          wget $(curl -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" -s https://api.github.com/repos/ovrclk/e2e-production/releases/latest | jq -r ".assets[] | select(.name | test(\"linux_amd64.deb\")) | .browser_download_url") -O e2e.deb
          sudo dpkg -i e2e.deb
      - name: import key
        run: |-
          echo "${{secrets.DEPLOY_KEY}}" > key.key
          echo "${{secrets.DEPLOY_TOKEN}}" | akash keys import ${{env.AKASH_FROM}} key.key
          rm key.key
      - name: import certificate
        run: echo "${{secrets.DEPLOY_CERT}}" > ${{env.AKASH_HOME}}/$(akash keys show ${{env.AKASH_FROM}} --output=json | jq -r ".address").pem
      - name: close all active deployments
        run: |-
          akash query deployment list --owner "$(akash keys show "${{env.AKASH_FROM}}" -a)" --state active -o json --limit 1000 | \
            jq -r '.deployments[].deployment|select(.state == "active")|.deployment_id.dseq' | \
              while read dseq; do
                akash tx deployment close --from "${{env.AKASH_FROM}}" --dseq "$dseq" --broadcast-mode sync --yes
                sleep 15
              done
      - name: running test
        run: akash-e2e-production manifests/deployment.yaml --chain-id=${{env.AKASH_CHAIN_ID}} --keyring-backend=${{env.AKASH_KEYRING_BACKEND}} --home=${{env.AKASH_HOME}} --node=${{env.AKASH_NODE}} --gas=auto --from=${{env.AKASH_FROM}} --timeout=500s
      - uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,action,eventName,workflow,job,took
          mention: here
          if_mention: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
